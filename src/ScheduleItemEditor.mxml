<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	title="スケジュール編集" showCloseButton="false" close="{onClose()}" creationComplete="init()">
	<mx:HRule width="100%" alpha="0.2" />
	<mx:Form id="displayConfigForm" width="100%" height="100%">
		<mx:FormItem label="指定方法">
			<mx:HBox>
				<mx:ComboBox id="scheduleType" dataProvider="{SwitchUtils.SCHEDULE_TYPES}" change="changeType()" />
				<mx:DateField id="seldate"  formatString="YYYY/MM/DD"  toolTip="指定日選択" />
				<mx:ComboBox id="selweek" dataProvider="{SwitchUtils.SCHEDULE_WEEKS}" />
				<mx:TextInput id="hour" restrict="[0-9]" maxChars="2" />
				<mx:Label text="時" paddingLeft="0" />
				<mx:TextInput id="minute" restrict="[0-9]" maxChars="2" />
				<mx:Label text="分" paddingLeft="0" />
			</mx:HBox>
		</mx:FormItem>
		<mx:FormItem label="アクション">
			<mx:HBox>
				<mx:ComboBox id="command" dataProvider="{SwitchUtils.SCHEDULE_COMMANDS}" change="changeCommand()" />
				<mx:ComboBox id="playlist" dataProvider="{workspace.playlists.playlist}" labelField="@name" />
				<mx:HSlider id="brightness" width="100%" minimum="0" maximum="100" tickInterval="10" snapInterval="1" value="0" change="changeBrightness()" toolTip="輝度設定" />
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
	<mx:HBox id="bar" width="100%" horizontalAlign="center">
		<mx:Button id="regist" label="登録" click="onRegist()" />
		<mx:Button id="cancel" label="キャンセル" click="onClose()" />
	</mx:HBox>
	<mx:Array id="validators">
		<mx:NumberValidator id="checkHour" minValue="0" maxValue="23" source="{hour}" property="text" />
		<mx:NumberValidator id="checkMin" minValue="0" maxValue="59" source="{minute}" property="text" />
	</mx:Array>
	<mx:Script><![CDATA[
		import mx.collections.ArrayCollection;
		import mx.managers.PopUpManager;

		[Bindable]
		public var workspace:XML;
		public var baseItem:XML = null;

		[Bindable]
		private var _item:XML;


		private final function init():void {
			if (baseItem) {
				_item = new XML(baseItem);
				var m:Object = SwitchUtils.scheduleToType(_item);
				if (m) {
					scheduleType.selectedItem = m;
				}
				changeType();
				var time:Array = _item.@time.split(/\s+/);
				if (time.length == 6) {
					var now:Date = new Date();
					var year:int = now.getFullYear();
					var mon:int = now.getMonth() + 1;
					var day:int = now.getDate();
					if (time[0] != '*') {
						year = parseInt(time[0]);
					}
					if (time[1] != '*') {
						mon = parseInt(time[1]);
					}
					if (time[2] != '*') {
						day = parseInt(time[2]);
					}
					seldate.text = year + "/" + mon + "/" + day;
					
					hour.text = time[3];
					minute.text = time[4];
				}

				m = SwitchUtils.scheduleToCommand(_item);
				if (m) {
					if (m.command == "playlist") {
						command.selectedIndex = 0;
						for each (var item:Object in playlist.dataProvider) {
							if (item.@id == m.data) {
								playlist.selectedItem = item;
								break;
							}
						}						
					} else if (m.command == "luminance") {
						command.selectedIndex = 1;
						brightness.value = parseInt(m.data);
					}
				}
				changeCommand();					
			}
		}

		/** 指定タイプ変更 */
		private final function changeType():void {
			if (scheduleType.selectedIndex == 1) {
				//seldate.includeInLayout = false;
				seldate.enabled = false;
				selweek.enabled = true;
			} else if (scheduleType.selectedIndex == 2) {
				selweek.enabled = false;
				seldate.enabled = true;
			} else {
				seldate.enabled = false;
				selweek.enabled = false;
			}
		}

		/** コマンド変更 */
		private final function changeCommand():void {
			if (command.selectedIndex == 0) {
				playlist.enabled = true;
				brightness.enabled = false;
			} else if (command.selectedIndex == 1) {
				playlist.enabled = false;
				brightness.enabled = true;
			}
		}

		/** 輝度 */
		private final function changeBrightness():void {
		}

		/** 登録処理 */
		private final function onRegist():void {
			var err:Array = mx.validators.Validator.validateAll(validators);
            if (err.length != 0) {
                mx.controls.Alert.show("時刻指定を確認してください");
				return;
            }

			var time:String = "";
			var week:String = "";
			if (scheduleType.selectedItem.id == 0) {
				time = "* * * ";
				week = " *";
			} else if (scheduleType.selectedItem.id == 1) {
				time = "* * * ";
				week = " " + selweek.selectedItem.week;
			} else if (scheduleType.selectedItem.id == 2) {
				var date:Array = seldate.text.split(/\//, 3);
				time = date[0] + " " + date[1] + " " + date[2] + " ";
				week = " *";
			}
			baseItem.@time = time + hour.text + " " + minute.text + week;
			if (command.selectedItem.command == "playlist") {
				baseItem.setChildren("playlist " + playlist.selectedItem.@id);
			} else if (command.selectedItem.command == "luminance") {
				baseItem.setChildren("luminance " + brightness.value);
			}
			//trace(baseItem.toXMLString());
			dispatchEvent(new EditedWorkspaceEvent());
			onClose();
		}

		/** クローズ処理 */
		private final function onClose():void {
			PopUpManager.removePopUp(this);
		}
	]]></mx:Script>
</mx:TitleWindow>
